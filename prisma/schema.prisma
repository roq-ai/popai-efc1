generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model meeting {
  id                                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                             String   @db.VarChar(255)
  date_time                         DateTime @db.Timestamp(6)
  team_leader_id                    String   @db.Uuid
  team_member_id                    String   @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  user_meeting_team_leader_idTouser user     @relation("meeting_team_leader_idTouser", fields: [team_leader_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_meeting_team_member_idTouser user     @relation("meeting_team_member_idTouser", fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model okr {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  objective      String   @db.VarChar(255)
  key_result     String   @db.VarChar(255)
  team_leader_id String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [team_leader_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model performance_review {
  id                                           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  review_date                                  DateTime @db.Timestamp(6)
  feedback                                     String   @db.VarChar(255)
  team_leader_id                               String   @db.Uuid
  team_member_id                               String   @db.Uuid
  created_at                                   DateTime @default(now()) @db.Timestamp(6)
  updated_at                                   DateTime @default(now()) @db.Timestamp(6)
  user_performance_review_team_leader_idTouser user     @relation("performance_review_team_leader_idTouser", fields: [team_leader_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_performance_review_team_member_idTouser user     @relation("performance_review_team_member_idTouser", fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                                         String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                                      String               @unique @db.VarChar(255)
  firstName                                                  String?              @db.VarChar(255)
  lastName                                                   String?              @db.VarChar(255)
  roq_user_id                                                String               @db.VarChar(255)
  tenant_id                                                  String               @db.VarChar(255)
  created_at                                                 DateTime             @default(now()) @db.Timestamp(6)
  updated_at                                                 DateTime             @default(now()) @db.Timestamp(6)
  company                                                    company[]
  meeting_meeting_team_leader_idTouser                       meeting[]            @relation("meeting_team_leader_idTouser")
  meeting_meeting_team_member_idTouser                       meeting[]            @relation("meeting_team_member_idTouser")
  okr                                                        okr[]
  performance_review_performance_review_team_leader_idTouser performance_review[] @relation("performance_review_team_leader_idTouser")
  performance_review_performance_review_team_member_idTouser performance_review[] @relation("performance_review_team_member_idTouser")
}
